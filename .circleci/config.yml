version: 2.1

jobs:

  test-job:  
      docker:
        - image: cimg/base:stable
      steps:
        - checkout 
        - run: echo "hello world" 

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Install tar and gzip
            command: |
              yum update
              yum upgrade
              yum install tar -y
              yum install gzip -y
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file infra.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-2
        - run:
            name: Get instance IDs
            command: |
              echo [all] > inventory.txt
              aws --region us-east-2 \
                  ec2 describe-instances \
                  --query 'Reservations[*].Instances[*].[PublicIpAddress]' \
                  --output text >> inventory.txt
              cat inventory.txt
              pwd
              ls
        - persist_to_workspace:
            root: /root/project
            paths:
              - inventory.txt

  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.16
    steps:
      - checkout
      - attach_workspace:
          at: /root/project
      - add_ssh_keys:
          fingerprints:
            - "50:1b:0b:0a:55:bd:d6:f7:a7:6e:2f:01:b9:4b:4d:df"
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
            apk add --update openssh
            apk add --update tar
            apk add --update gzip
            pip3 install awscli
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt main-remote.yml 

  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           URL="http://3.17.69.112:3000"
  #           # Test if website exists
  #           if curl -s --head ${URL} 
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi

  # destroy_environment:
  #   steps:
  #     - run:
  #         name: Destroy environment
  #         # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
  #         # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
  #         when: on_fail
  #         command: |
  #           aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}  --region us-east-2

workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - test-job
      - create_infrastructure
      - configure_infrastructure:
          requires: [create_infrastructure]
      # - smoke_test